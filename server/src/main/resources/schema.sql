CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT unique_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS item (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(255) NOT NULL,
  available BOOLEAN NOT NULL,
  owner_id BIGINT NOT NULL,
  CONSTRAINT pk_item PRIMARY KEY (id),
  CONSTRAINT fk_item_owner_id FOREIGN KEY(owner_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS booking (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  item_id BIGINT NOT NULL,
  booker_id BIGINT NOT NULL,
  start_date TIMESTAMP NOT NULL,
  end_date TIMESTAMP NOT NULL,
  status VARCHAR(20) NOT NULL,
  CONSTRAINT pk_booking PRIMARY KEY (id),
  CONSTRAINT fk_booking_booker_id FOREIGN KEY(booker_id) REFERENCES users (id),
  CONSTRAINT fk_booking_item_id FOREIGN KEY(item_id) REFERENCES item (id)
);

CREATE TABLE IF NOT EXISTS comment (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  item_id BIGINT NOT NULL,
  user_id BIGINT NOT NULL,
  text VARCHAR(1024) NOT NULL,
  created TIMESTAMP NOT NULL,
  CONSTRAINT pk_comment PRIMARY KEY (id),
  CONSTRAINT fk_comment_user_id FOREIGN KEY(user_id) REFERENCES users (id),
  CONSTRAINT fk_comment_item_id FOREIGN KEY(item_id) REFERENCES item (id)
);

CREATE TABLE IF NOT EXISTS request (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id BIGINT NOT NULL,
  description VARCHAR(1024) NOT NULL,
  created TIMESTAMP NOT NULL,
  CONSTRAINT pk_request PRIMARY KEY (id),
  CONSTRAINT fk_request_user_id FOREIGN KEY(user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS request_item (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
  request_id BIGINT NOT NULL,
  item_id BIGINT NOT NULL,
  CONSTRAINT fk_request_item_request_id FOREIGN KEY(request_id) REFERENCES request (id),
  CONSTRAINT fk_request_item_item_id FOREIGN KEY(item_id) REFERENCES item (id)
);
